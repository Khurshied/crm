@model HLGranite.Mvc.Models.User

@{
    ViewBag.Title = "Edit";
}

@Scripts.Render("~/Scripts/jquery-2.0.3.min.js")
<script>
    $(function () {
        $("#edit").click(function () {
            //$(this).addClass("pressed");
            $(this).css("background", "#ccc");
            $("#body input").each(function () {
                $(this).removeAttr("readonly");
            });
            $("#body textarea").each(function () {
                $(this).removeAttr("readonly");
            });
        });
    });
</script>

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>User</legend>

        @Html.HiddenFor(model => model.Id)

        @{
            HLGranite.Mvc.Models.hlgraniteEntities db = new HLGranite.Mvc.Models.hlgraniteEntities();
            HLGranite.Mvc.Models.User user = db.Users.Where(u => u.UserName.Equals(User.Identity.Name)).FirstOrDefault();
            bool isAdmin = false;
            if (user != null)
            {
                isAdmin = user.IsAdmin;
            }
            
            if (isAdmin)
            {
                <div class="editor-label">
                    @Html.LabelFor(model => model.UserTypeId, "UserType")
                </div>
                <div class="editor-field">
                    @Html.DropDownList("UserTypeId", String.Empty)
                    @Html.ValidationMessageFor(model => model.UserTypeId)
                </div>
            }
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.UserName, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password, new { @readonly = "readonly" })
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.Password, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FirstName, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.LastName, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Email, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Telephone)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Telephone, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Telephone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Mobile)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Mobile, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Mobile)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Street1)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Street1, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Street1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Street2)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Street2, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Street2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.City, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Postcode)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Postcode, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Postcode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.State, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Country)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Country, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Country)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remarks)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Remarks, new { @cols = "80", @rows = "4", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Active)
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Active, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Active)
        </div>

        <p>
            <input id="edit" type="button" value="Edit" />
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
