@model IEnumerable<HLGranite.Mvc.Models.Nisan>

@{
    ViewBag.Title = "Chart";

    HLGranite.Mvc.Models.hlgraniteEntities db = new HLGranite.Mvc.Models.hlgraniteEntities();
    HLGranite.Mvc.Models.User user = db.Users.Where(u => u.UserName.Equals(User.Identity.Name)).FirstOrDefault();
    bool isCustomer = true; // default is true
    if (user != null)
    {
        isCustomer = user.IsCustomer;
    }

    int i = 0; // numbering
}

@functions{
    public string ToDateString(HLGranite.Mvc.Models.Nisan nisan)
    {
        string displayText = string.Empty;
        if(nisan.Death.HasValue)
        {
            displayText += nisan.Death.Value.ToString("dd-MM-yyyy");
        }
        if(nisan.Deathm.HasValue)
        {
            if(displayText.Length>0)
            {
                displayText += " = ";
            }
            displayText += nisan.Deathm.Value.ToString("dd-MM-yyyy");
        }

        return displayText;
    }
}

<h2>Chart</h2>

@{
    string sql = "select";
    sql += " Year(Activities.Date)*100+Month(Activities.Date) as Month, COUNT(Nisans.Id) as Quantity";
    sql += " from Nisans";
    //sql += " join Users on Nisans.SoldToId=Users.Id";
    //sql += " join Stocks on Nisans.StockId=Stocks.Id";
    sql += " join WorkItems on Nisans.WorkItemId=WorkItems.Id";
    sql += " join Activities on WorkItems.Id=Activities.WorkItemId";
    sql += " where Activities.StatusId=43";
    sql += " and Activities.Id in (";
    sql += " select a.Id";
    sql += " from (select b.Id, rowid = ROW_NUMBER() OVER (PARTITION BY WorkItemId ORDER BY Id) from Activities b) a";
    sql += " where rowid <= 1";
    sql += " )";
    sql += " group by Year(Activities.Date)*100+Month(Activities.Date)"; //, Stocks.Name";
    sql += " order by Year(Activities.Date)*100+Month(Activities.Date)";
    //var data = db.Nisans.SqlQuery(sql, new object[] { });
    var data = db.Database.SqlQuery<HLGranite.Mvc.Models.MonthVolume>(sql).ToList();
    int [] m = data.Select(f => f.Month).ToArray();
    List<string> months = new List<string>();
    foreach(int month in m)
    {
        months.Add(month.ToString());
    };
    int[] quantities = data.Select(f => f.Quantity).ToArray();
    var myChart = new Chart(width: 600, height: 400)
        .AddTitle("Monthly Sold Quantity")
        .AddSeries(
            name: "Sold",
            xValue: months,
            yValues: quantities
        )
        .Write();
}
